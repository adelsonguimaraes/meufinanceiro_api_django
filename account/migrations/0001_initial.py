# Generated by Django 4.2.1 on 2023-05-16 22:14

import account.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_column='tx_username', max_length=64, unique=True)),
                ('password', models.CharField(db_column='tx_password', max_length=104)),
                ('name', models.CharField(db_column='tx_name', max_length=256, null=True)),
                ('email', models.CharField(db_column='tx_email', max_length=256, unique=True)),
                ('last_login', models.DateTimeField(db_column='dt_last_login', null=True)),
                ('is_active', models.BooleanField(db_column='cs_active', default=True)),
                ('is_superuser', models.BooleanField(db_column='cs_superuser', default=True)),
                ('is_staff', models.BooleanField(db_column='cs_staff', default=False)),
                ('is_default', models.BooleanField(db_column='cs_default', default=False)),
                ('avatar', models.BinaryField(db_column='bl_avatar', null=True)),
                ('is_ad_user', models.BooleanField(db_column='cs_ad_user', default=False)),
                ('is_privileged_user', models.BooleanField(db_column='cs_privileged_user', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='tx_description', max_length=64, null=True)),
                ('icon', models.CharField(blank=True, db_column='tx_icon', max_length=64)),
                ('route', models.CharField(blank=True, db_column='tx_route', max_length=64, null=True)),
            ],
            options={
                'db_table': 'account_menu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserMenu',
            fields=[
                ('id', models.BigAutoField(db_column='id', primary_key=True, serialize=False)),
                ('menu', models.ForeignKey(db_column='id_menu', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_menus', to='account.menu')),
                ('user', models.ForeignKey(db_column='id_user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_menus', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'account_user_menu',
                'managed': True,
                'unique_together': {('user', 'menu')},
            },
        ),
    ]
